plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.9.2'
    id 'java'
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
}

group = 'woowacrew'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
    acceptanceDir = 'src/acceptance-test'
    set('snippetsDir', file("build/generated-snippets"))
}

configurations {
    developmentOnly

    runtimeClasspath {
        extendsFrom developmentOnly
    }

    acceptanceTestImplementation.extendsFrom(implementation, testImplementation, runtimeOnly)
}

sourceSets {
    acceptanceTest {
        compileClasspath += main.output + test.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
        java.srcDir file("${acceptanceDir}/java")
    }
}

task acceptanceTest(type: Test) {
    description = 'run acceptance test'
    testClassesDirs = sourceSets.acceptanceTest.output.classesDirs
    classpath = sourceSets.acceptanceTest.runtimeClasspath

    dependsOn test
}

check {
    dependsOn acceptanceTest
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'org.modelmapper:modelmapper:2.3.2'
    implementation 'com.rometools:rome:1.12.0'

    runtimeOnly 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit'
    }
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    testRuntime 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'

    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}